MakeVariable = (variable expr) asigna el valor de expr a variable, creando la variable si es necesario. devuelve expr
Repeat = (expr [command (s)]) ejecuta command (s) dado en la lista el valor de expr número de veces. devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando). nota, el valor de la iteración actual, comenzando en 1, se asigna automáticamente a la variable: repcount para que pueda ser accedida por el comando (s)
DoTimes = ([variable límite] [comando (s)]) ejecuta comando (s) para cada valor especificado en el rango, es decir, desde (1 - límite) inclusive. devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando) .note, la variable se asigna a cada valor subsiguiente para que se pueda acceder mediante el comando (s)
For = ([variable start end end] [comando (s)]) ejecuta comando (s) para cada valor especificado en el rango, es decir, desde (inicio - final), yendo por incremento. devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando). nota, la variable se asigna a cada valor subsiguiente para que se pueda acceder con los comandos
If = (expr [comando (s)]) si expr no es 0, ejecuta el (los) comando (s) que figuran en la lista. devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando)
IfElse = (expr [trueCommand (s)] [falseCommand (s)]) si expr no es 0, ejecuta el trueCommand dado en la primera lista, de lo contrario ejecuta el falseCommands dado en la segunda lista. devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando)
MakeUserInstruction = (commandName [variable (s)] [command (s)]) asigna los comandos dados en la segunda lista a commandName usando los parámetros dados en la primera lista como variables cuando commandName se usa más adelante en un programa, cualquier valor dado es asignadas a variables a las que se puede acceder cuando se ejecuta la lista de comandos y se devuelve el valor del comando final ejecutado (o 0 si no se ejecuta ningún comando). devuelve 1 si el comando se define correctamente, de lo contrario 0